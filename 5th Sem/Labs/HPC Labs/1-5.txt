#include<stdio.h>
#include<omp.h>
#include<math.h>

int main(){
	int x;
	omp_set_num_threads(4);
	printf("Enter x: ");
	scanf("%d", &x);

	#pragma omp parallel{
		int i = omp_get_thread_num();
		printf("Thread %d: %d\n", i, pow(x, i));
	}
}

#include<stdio.h>
#include<omp.h>

int main(){
	int len, arr[20]; 
	printf("Enter array size: ");
	scanf("%d", &len)
	printf("Enter elements: ");
	for(int i = 0; i < len; i++) scanf("%d", arr + i);
	omp_set_num_threads(2);
	#pragma omp parallel
	{
		int sum = 0;
		for(int i = omp_get_thread_num(); i < len; i += 2)
			sum += arr[i];
		if(omp_get_thread_no() == 1) printf("Even elements: %d\n", sum);
		else printf("Odd elements: %d\n", sum);
		
	}
}

#include<stdio.h>
#include<omp.h>

int main(){
	int x, y;
	printf("Enter x, y: ");
	scanf("%d %d", &x, &y);
	omp_set_num_threads(4);
	#pragma omp parallel
	{
		int res, i = omp_get_thread_num();
		if(i == 0) res = x + y;
		if(i == 1) res = x - y;
		if(i == 2) res = x * y;
		if(i == 3) res = x / y;
		printf("%d: %d\n", i, res);
	}
}

#include<stdio.h>
#include<omp.h>

int main(){
	int x[4], y[4];
	printf("Enter x: ");
	scanf("%d %d %d %d", x, x+1, x+2, x+3);
	printf("Enter y: ");
	scanf("%d %d %d %d", y, y+1, y+2, y+3);	
	
	omp_set_num_threads(4);
	#pragma omp parallel
	{
		int res[4], i = omp_get_thread_num();
		if(i == 0) 
			for(int i = 0; i < 4; i++) 
				res[i] = x[i] + y[i];
		if(i == 1)
			for(int i = 0; i < 4; i++) 
				res[i] = x[i] - y[i];
		if(i == 2)
			for(int i = 0; i < 4; i++) 
				res[i] = x[i] * y[i];
		if(i == 3)
			for(int i = 0; i < 4; i++) 
				res[i] = x[i] / y[i];
		for(int i = 0; i < 4; i++) printf("%d ", res[i]);
	}
}

#include<stdio.h>
#include<omp.h>

int main(){
	int s, e;
	printf("Enter start, end: ");
	scanf("%d %d", &s, &e);
	
	omp_set_num_threads(4);
	#pragma omp parallel for
		for(int i = start, i <= end; i++){
			int isPrime = 1;
			for(int j = 2; j < i/2; j++)
				if(i % j == 0) isPrime = 0;
			if(isPrime) printf("%d\n", i);
		}				
}










