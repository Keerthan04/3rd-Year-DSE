ctrl+l to clear screen

create database if not exists hivew7;

create table web_log(log_id INT,ip_address STRING,url STRING,status_code INT,response_time STRING,log_date STRING) row format delimited fields terminated by ',' stored as textfile;


alter table web_log set tblproperties("skip.header.line.count"="1");

load data inpath '/user/220968002/lab6/weblogs.csv' into table web_log;

select url,count(*) as visited_count from web_log group by url;
/about	1
/checkout	2
/contact	1
/home	2
/login	1
/product	2
/register	1
/services	2


select log_date,count(*) as visited_count from web_log group by log_date;(taking log date for peak traffic)
2024-01-01	2
2024-01-02	2
2024-01-03	2
2024-01-04	2
2024-01-05	2
2024-01-06	2


select * from web_log where status_code=404;
2	192.168.1.2	/product	404	60ms	2024-01-01
7	192.168.1.7	/login	404	50ms	2024-01-04

SET hive.exec.dynamic.partition = true;
SET hive.exec.dynamic.partition.mode = nonstrict;

create table web_log_partitioned (log_id INT,ip_address STRING,url string,status_code INT,response_time string) partitioned by (log_date string) stored as textfile;

//if by year then this one
insert into web_log_partitioned partition(log_date) select log_id,ip_address,url,status_code,response_time,YEAR(TO_DATE(log_date)) as log_date from web_log;

//normal date(here only when inseting to partition always shd the partition column(log_date) shd be last in select statement)
insert into web_log_partitioned partition(log_date) select log_id,ip_address,url,status_code,response_time,log_date from web_log;

select * from web_log_partitioned where log_date='2024-01-01';
1	192.168.1.1	/home	200	120ms	2024-01-01
2	192.168.1.2	/product	404	60ms	2024-01-01

create table web_log_bucketed(log_id INT,ip_address string,url string,status_code string,response_time string,log_date string) clustered by (status_code) into 4 buckets stored as textfile;

set hive.enforce.bucketing = true;

insert overwrite table web_log_bucketed select * from web_log sort by status_code;

select * from web_log_bucketed where status_code = 404;
7	192.168.1.7	/login	404	50ms	2024-01-04
2	192.168.1.2	/product	404	60ms	2024-01-01


//order of execution is
SELECT dept, AVG(marks) AS avg_marks
FROM students
WHERE marks > 40
GROUP BY dept
HAVING avg_marks > 50
ORDER BY avg_marks DESC
LIMIT 3;



